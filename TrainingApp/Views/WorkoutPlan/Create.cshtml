@model TrainingApp.Models.CreateWorkoutPlanVM

<h2 class="mb-4">Create Workout Plan</h2>


<head>
    <meta charset="utf-8" />
    <title>Create Workout Plan</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />
    <style>
       body {
            background-color: #f8f9fa;
        }

        .container {
            max-width: 800px;
            margin-top: 50px;
        }

        form {
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px; /* Add some margin at the bottom */
        }

        label {
            font-weight: bold;
        }

        input[type="text"],
        input[type="number"],
        textarea,
        select {
            width: 100%;
            padding: 8px;
            margin-bottom: 10px;
            box-sizing: border-box;
            border: 1px solid #ced4da;
            border-radius: 4px;
        }

        button {
            background-color: #007bff;
            color: #fff;
            padding: 10px 15px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        .navbar-nav{
            margin: 0 auto;
        }
        ul {
            list-style-type: none;
            padding: 0;
        }

        li {
            margin-bottom: 10px;
        }

    </style>
</head>
<body>

<form asp-controller="WorkoutPlan" asp-action="Create" method="post">
    <div>
        <label for="Name">Name:</label>
        <input type="text" id="Name" name="Name" asp-for="Name" />
        <span asp-validation-for="Name"></span>
    </div>

    <div>
        <label for="Description">Description:</label>
        <textarea id="Description" name="Description" asp-for="Description"></textarea>
        <span asp-validation-for="Description"></span>
    </div>

    <div style="display: inline-block; width: 50%;">
        <label for="DurationInDays">Duration of the plan (days):</label>
        <input type="number" id="DurationInDays" name="DurationInDays" asp-for="DurationInDays"  />
        <span asp-validation-for="DurationInDays"></span>
    </div>

    <div>
        <label for="StartDate">Start Date:</label>
        <input type="date" id="StartDate" name="StartDate" asp-for="StartDate" min="@DateTime.Today.ToString("yyyy-MM-dd")" />

        <span asp-validation-for="StartDate"></span>
    </div>
    <div>
    <label for="ExerciseInput"> <small>(Optional)</small> Add Exercises:</label>
    <input type="text" id="ExerciseInput" name="ExerciseInput" asp-for="ExerciseInput" />
    <button type="button" class="btn-sm mb-3" onclick="addExercise()" id="addButton">Add exercise</button>

    </div>
    <!-- Add this to capture sets and reps for each exercise -->

    <p id="pInfo"></p>
    <ul id="SelectedExercises">
    
@*    @for (var i = 0; i < Model.SelectedExercises.Count; i++)
    {
        <li>
        <div>
            <label>Exercise: @Model.SelectedExercises[i]</label>
            <input type="number" name="Sets[@i]" placeholder="Sets" />
            <input type="number" name="Reps[@i]" placeholder="Reps" />
        </div>
        </li>
    }*@

    </ul>

    <!-- Add this to include the selected exercises -->
    <div>

</div>

@*<button onclick="submitWorkoutPlan()">submit</button>*@

<button type="submit">Create</button>

</form>
</body>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<script>

    var selectedExercises = [];

        function addExercise() {
            
            var exerciseName = $('#ExerciseInput').val();
            var sets = 0; // default value
            var reps = 0; // default value

            // Create an ExerciseInPlan object and push it to the array
            var exerciseObject = {
                name: exerciseName,
                sets: sets,
                reps: reps
            };

            if (exerciseName!= "") {
                document.getElementById("pInfo").innerHTML = "<small> Enter sets and reps for the chosen exercises (optional) </small>";
                selectedExercises.push(exerciseObject);

            // Create HTML elements for the new exercise
            
                var exerciseHtml = '<li>';
                exerciseHtml += '<span>' +'<strong>' + exerciseName + ' - '+ '</strong>' + '</span>';
                exerciseHtml += ' Sets: <input type="number" class="sets-input" style="width: 50px;" />';
                exerciseHtml += ' Reps: <input type="number" class="reps-input" style="width: 50px;" />';
                exerciseHtml += '</li>';


                // Append the exercise HTML to the container
                $('#SelectedExercises').append(exerciseHtml);
            }

                // Clear the exercise input
                $('#ExerciseInput').val('');
        }

        $('form').submit(function (event) {
            // Update the sets and reps in the selectedExercises array
            $('#SelectedExercises li').each(function (index, element) {
                var sets = $(element).find('.sets-input').val() || 0;
                var reps = $(element).find('.reps-input').val() || 0;

                selectedExercises[index].sets = sets;
                selectedExercises[index].reps = reps;
            });

            // Include the selectedExercises array in the form data
            $('<input />').attr('type', 'hidden')
                .attr('name', 'SelectedExercises')
                .attr('value', JSON.stringify(selectedExercises))
                .appendTo('form');

            // Allow the form submission to proceed
            return true;
        });
</script>